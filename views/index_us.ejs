<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestión de Usuarios</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <header class="text-center">
        <h1>Gestión de Usuarios</h1>
        <!-- Botón para regresar al menú principal con icono -->
        <a href="/menu.html" class="btn btn-regresar">
          <img src="/maiz_incon_1.png" alt="Ícono de Menú" /> Regresar
        </a>
      </header>

    <div class="container">
        <h3>Registrar Usuario</h3>
        <form id="userForm">
            <!-- Nombre del Usuario -->
            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre</label>
                <input type="text" class="form-control" id="nombre" placeholder="Ingresa el nombre del usuario" required>
            </div>
            <!-- Tipo de Usuario -->
            <div class="mb-3">
                <label for="userType" class="form-label">Tipo de Usuario</label>
                <select class="form-select" id="userType" required>
                    <option value="" disabled selected>Seleccione un tipo</option>
                    <option value="admin">Admin</option>
                    <option value="vendedor">Vendedor</option>
                </select>
            </div>
            <!-- Correo Electrónico -->
            <div class="mb-3">
                <label for="email" class="form-label">Correo Electrónico</label>
                <input type="email" class="form-control" id="email" placeholder="Ingresa el correo" required>
            </div>
            <!-- Contraseña -->
            <div class="mb-3">
                <label for="password" class="form-label">Contraseña</label>
                <input type="password" class="form-control" id="password" placeholder="Ingresa la contraseña" required>
            </div>
            <!-- Botón de Enviar -->
            <button type="submit" class="btn btn-primary w-100">Registrar Usuario</button>
        </form>

        <h3 class="mt-4">Usuarios Registrados</h3>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Tipo de Usuario</th>
                    <th>Correo</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="usuariosLista"></tbody>
        </table>
    </div>

    <script type="module">
        // Importar funciones necesarias de Firebase
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.17.2/firebase-app.js";
        import { getAuth, createUserWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/9.17.2/firebase-auth.js";
        import { getFirestore, doc, setDoc, getDocs, collection, deleteDoc, updateDoc } from "https://www.gstatic.com/firebasejs/9.17.2/firebase-firestore.js";

        // Configuración de Firebase
        const firebaseConfig = {
            apiKey: "AIzaSyDir1EGmb6BKQHqLMTjtEb3QWCDLaaXK_0",
            authDomain: "maiz-db.firebaseapp.com",
            projectId: "maiz-db",
            storageBucket: "maiz-db.appspot.com",
            messagingSenderId: "585244696486",
            appId: "1:585244696486:web:efc2e9c4cbc75c3fd9b967"
        };

        // Inicializar Firebase
        const app = initializeApp(firebaseConfig);
        const auth = getAuth(app);
        const db = getFirestore(app);

        // Manejo del formulario de registro
        const userForm = document.getElementById('userForm');
        userForm.addEventListener('submit', async (event) => {
            event.preventDefault();

            const nombre = document.getElementById('nombre').value;
            const userType = document.getElementById('userType').value;
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;

            try {
                // Crear usuario en Firebase Authentication
                const userCredential = await createUserWithEmailAndPassword(auth, email, password);
                const userId = userCredential.user.uid;

                // Guardar datos adicionales en Firestore
                await setDoc(doc(db, "usuarios", userId), {
                    nombre: nombre,
                    tipo: userType,
                    correo: email,
                    creadoEn: new Date().toISOString()
                });

                alert('Usuario registrado con éxito');
                userForm.reset();
                cargarUsuarios(); // Actualizar lista de usuarios
            } catch (error) {
                alert('Error al registrar usuario: ' + error.message);
            }
        });

        // Cargar lista de usuarios desde Firestore
        async function cargarUsuarios() {
            const usuariosRef = collection(db, "usuarios");
            const querySnapshot = await getDocs(usuariosRef);
            const usuarios = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
            
            const usuariosLista = document.getElementById('usuariosLista');
            usuariosLista.innerHTML = ''; // Limpiar la tabla antes de llenarla

            usuarios.forEach(usuario => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${usuario.nombre}</td>
                    <td>${usuario.tipo}</td>
                    <td>${usuario.correo}</td>
                    <td>
                        <button class="btn btn-warning" onclick="modificarUsuario('${usuario.id}', '${usuario.nombre}', '${usuario.tipo}', '${usuario.correo}')">Modificar</button>
                        <button class="btn btn-danger" onclick="eliminarUsuario('${usuario.id}')">Eliminar</button>
                    </td>
                `;
                usuariosLista.appendChild(row);
            });
        }

        // Eliminar usuario de Firestore
        async function eliminarUsuario(userId) {
            try {
                await deleteDoc(doc(db, "usuarios", userId)); // Elimina el documento de Firestore
                alert('Usuario eliminado');
                cargarUsuarios(); // Vuelve a cargar la lista actualizada
            } catch (error) {
                alert('Error al eliminar usuario: ' + error.message);
            }
        }

        // Modificar usuario
        async function modificarUsuario(userId, nombre, tipo, correo) {
            // Pre-cargar los valores en el formulario de registro para editar
            document.getElementById('nombre').value = nombre;
            document.getElementById('userType').value = tipo;
            document.getElementById('email').value = correo;

            // Cambiar el comportamiento del formulario para actualizar
            userForm.removeEventListener('submit', handleFormSubmit);
            userForm.addEventListener('submit', function handleFormSubmitEdit(event) {
                event.preventDefault();
                actualizarUsuario(userId);
            });
        }

        // Actualizar usuario
        async function actualizarUsuario(userId) {
            const nombre = document.getElementById('nombre').value;
            const userType = document.getElementById('userType').value;
            const email = document.getElementById('email').value;

            try {
                await updateDoc(doc(db, "usuarios", userId), {
                    nombre: nombre,
                    tipo: userType,
                    correo: email
                });

                alert('Usuario actualizado con éxito');
                userForm.reset();
                cargarUsuarios(); // Volver a cargar la lista
                userForm.removeEventListener('submit', handleFormSubmitEdit);
                userForm.addEventListener('submit', handleFormSubmit);
            } catch (error) {
                alert('Error al actualizar usuario: ' + error.message);
            }
        }

        // Cargar usuarios al cargar la página
        window.onload = cargarUsuarios;
    </script>
</body>
</html>
